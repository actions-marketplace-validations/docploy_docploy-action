name: 'Publish docs to GitHub Pages'
description: 'Action that publishes docs to the ghpages branch'
inputs:
  githubToken:
    description: GitHub token
  username:
    description: 'Username for doc generation commits'
    default: 'docploy'
  email:
    description: 'Email for doc generation commits'
    default: 'docploy@github.com'
  timeout:
    description: 'Timeout for waiting until docs are generated, in seconds (default: 60)'
    default: 120,
  baseUrl:
    description: 'The GitHub Pages base URL for your repo'
  docsDir:
    description: 'Path to the docs dir'
    default: 'docs'
  pagesBranch:
    description: 'The branch set up to serve Github Pages (default: gh-pages)'
    default: 'gh-pages'

branding:
  icon: 'book-open'
  color: 'yellow'

runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install dependencies
      run: yarn
      working-directory: ${{ github.action_path }}
      shell: bash
    - name: Build docs
      run: ./scripts/buildDocs.sh
      working-directory: ${{ github.action_path }}
      shell: bash
      env:
        BASE_URL: ${{ inputs.baseUrl }}
        DOCS_DIR: ${{ inputs.docsDir }}

    - name: Push built docs to GitHub Pages branch
      run: |
        git config --global user.email "${{ inputs.email }}"
        git config --global user.name "${{ inputs.username }}"
        git fetch
        git switch -c ${{ inputs.pagesBranch }}
        git clean -f -d
        is_branch_in_remote=$(git ls-remote --heads origin ${{ inputs.pagesBranch}})
        if [[ ! -z ${is_branch_in_remote} ]]; then
          git reset --hard origin/${{ inputs.pagesBranch }}
        fi
        SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
        if [ -d "./$SHORT_SHA" ]; then
          rm -rf ./$SHORT_SHA
        fi
        mkdir ./$SHORT_SHA
        cp -r $GITHUB_ACTION_PATH/out/* ./$SHORT_SHA
        if [ ! -f "./.nojekyll" ]; then
          touch "./.nojekyll"
        fi
        git add .
        git commit -m "Publishing docs for $SHORT_SHA"
        git push origin ${{ inputs.pagesBranch }}
      shell: bash
    - run: node dist/checkPagesDeploy
      working-directory: ${{ github.action_path }}
      shell: bash
      env:
        BASE_URL: ${{ inputs.baseUrl }}
        GITHUB_TOKEN: ${{ inputs.githubToken }}
